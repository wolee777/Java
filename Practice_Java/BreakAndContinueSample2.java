package com.example;

/**
 * break 문과 continue 문 예제를 실행하고 내용을 확인하는 클래스입니다.
 */
public class BreakAndContinueSample2 {

	/**
	 * break 문과 continue 문을 실행하고 내용을 확인합니다.
	 * 
	 * @param args
	 * 			명령줄 인수. 이번에는 사용하지 않습니다.
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println( "------- [1] 루프가 중첩된 경우 안쪽 루프에서 break -------" );
		for ( int i = 0; i < 3; ++i ) {
			for ( int j = 0; j < 3; ++j ) {
				if ( j == 1 ) {
					System.out.println( "j == 1일 때 break" );
					break;
				}
				System.out.println( "i = " + i + ", j = " + j );
			}
		}
		
		System.out.println( "------- [2] 루프가 중첩된 경우 안쪽 루프에서 continue -------" );
		for ( int i = 0; i < 3; ++i ) {
			for ( int j = 0; j < 3; ++j ) {
				if ( j == 1 ) {
					System.out.println( "j == 1일 때 continue" );
					continue;
				}
				System.out.println( "i = " + i + ", j = " + j );
			}
		}

		System.out.println( "------- [3] 루프가 중첩된 경우 바깥쪽 루프에서 break -------" );
		for ( int i = 0; i < 3; ++i ) {
			if ( i == 1 ) {
				System.out.println( "i == 1일 때 break" );
				break;
			}
			for ( int j = 0; j < 3; ++j ) {
				System.out.println( "i = " + i + ", j = " + j );
			}
		}

		System.out.println( "------- [4] 루프가 중첩된 경우 바깥쪽 루프에서 continue -------" );
		for ( int i = 0; i < 3; ++i ) {
			if ( i == 1 ) {
				System.out.println( "i == 1일 때 continue" );
				continue;
			}
			for ( int j = 0; j < 3; ++j ) {
				System.out.println( "i = " + i + ", j = " + j );
			}
		}
		
	}


}
